#+TITLE: reformr 開発プロジェクトノート
#+PROPERTY: header-args :session *R:tidyNAS*

#+call: load-packages() :results silent

* パッケージ読み込み
#+name: load-packages
#+BEGIN_SRC R :results silent
  library(tidyverse)
  library(lubridate)
  library(readxl)
#+END_SRC

* 定数宣言
#+name: constants
#+BEGIN_SRC R :results silent
  datdir_jm_org <- "/Volumes/評価研/個人的データ置き場/hayashi/kouseido_maaji/original_data/"
  datdir_jm     <- "/Users/ahayashi/Documents/GitHub/jm/data/"
#+END_SRC

* パッケージ開発の準備
:LOGBOOK:
CLOCK: [2018-12-16 Sun 12:45]--[2018-12-16 Sun 13:13] =>  0:28
:END:
** DONE このファイルをagenda に追加する
** R パッケージの開発環境を整える
*** DONE パッケージ dir を作る
:LOGBOOK:
CLOCK: [2018-12-26 Wed 11:49]--[2018-12-26 Wed 12:18] =>  0:29
:END:
#+BEGIN_SRC R
  setwd("/Users/ahayashi/Documents/GitHub/tidyNAS/")
  list.files()
#  devtools::create("reformr")
#+END_SRC

#+RESULTS:


*** DONE テスト dir を作る
#+BEGIN_SRC R
devtools::use_testthat("reformr")
#+END_SRC

#+RESULTS:
: TRUE

*** 依存パッケージを宣言する
#+BEGIN_SRC R
  devtools::use_package("tidyverse", type = "Imports", pkg = "reformr")
  devtools::use_package("lubridate", type = "Imports", pkg = "reformr")
  devtools::use_package("readxl", type = "Imports", pkg = "reformr")
#+END_SRC

#+RESULTS:

*** dir 確認
#+BEGIN_SRC bash :session nil :results output
ls reformr
#+END_SRC

#+RESULTS:
: DESCRIPTION	NAMESPACE	R		reformr.Rproj	tests
* データのリストを作ってみる
#+NAME: load_data
#+BEGIN_SRC R :session *R:tidyNAS* :var indir = "./data/鮮魚関係"
  list.files(indir, pattern = ".+[カタクチイワシ|マイワシ|マアジ]\\.xls", recursive = TRUE)
#+END_SRC

#+RESULTS: load_data
| 鮮魚測定06/カタクチイワシ.xls |
| 鮮魚測定06/マイワシ.xls       |
| 鮮魚測定07/カタクチイワシ.xls |
| 鮮魚測定07/マイワシ.xls       |
| 鮮魚測定08/カタクチイワシ.xls |
| 鮮魚測定08/マイワシ.xls       |
| 鮮魚測定09/カタクチイワシ.xls |
| 鮮魚測定09/マイワシ.xls       |
| 鮮魚測定10/カタクチイワシ.xls |
| 鮮魚測定10/マイワシ.xls       |
| 鮮魚測定11/カタクチイワシ.xls |
| 鮮魚測定11/マイワシ.xls       |
| 鮮魚測定12/カタクチイワシ.xls |
| 鮮魚測定12/マイワシ.xls       |
| 鮮魚測定13/カタクチイワシ.xls |
| 鮮魚測定13/マイワシ.xls       |
| 鮮魚測定14/カタクチイワシ.xls |
| 鮮魚測定14/マイワシ.xls       |
| 鮮魚測定15/カタクチイワシ.xls |
| 鮮魚測定15/マイワシ.xls       |
| 鮮魚測定16/カタクチイワシ.xls |
| 鮮魚測定16/マイワシ.xls       |
| 鮮魚測定17/カタクチイワシ.xls |
| 鮮魚測定17/マイワシ.xls       |
| 鮮魚測定18/カタクチイワシ.xls |
| 鮮魚測定18/マイワシ.xls       |
| 鮮魚測定19/カタクチイワシ.xls |
| 鮮魚測定19/マイワシ.xls       |

* テストを書く
** パラメータ作成関数
#+BEGIN_SRC R :tangle reformr/tests/testthat/test_param.R
library(tidyverse)
context("Handle param object")
test_that("make_params accept only 'sengyo' or 'cruise'", {
  expect_error(make_params(indir = "./", "a"), "Tell me the correct type of data. Is it 'sengyo', or 'cruise?'", fixed = TRUE)
  expect_error(make_params(indir = "./", 1), "Tell me the correct type of data. Is it 'sengyo', or 'cruise?'", fixed = TRUE)
})
test_that("make_params accept only 'カタクチイワシ', 'マイワシ' or 'マアジ' ", {
  expect_error(make_params(indir = "./", "sengyo", 1), "Tell me the correct Japanese species name.", fixed = TRUE)
  expect_error(make_params(indir = "./", "sengyo", "Anchovy"),  "Tell me the correct Japanese species name.", fixed = TRUE)
})
#+END_SRC

** 文字列パース
#+BEGIN_SRC R :tangle reformr/tests/testthat/test_filestring.R
  library(tidyverse)
  context("Parse file and sheet names")
  indir <- "/Users/ahayashi/Documents/GitHub/tidyNAS/data/鮮魚関係"
  type  <- "sengyo"
  test_that("make_datlist make data list correctly", {
    expect_match(make_datlist(indir, type), "鮮魚測定06", all = FALSE)
    expect_match(make_datlist(indir, type), "鮮魚測定07", all = FALSE)
  })

  datlist <- make_datlist(indir, type)

  test_that("parse_year() puts year list correctly", {
    expect_match(parse_year(datlist), "2008", all = FALSE)
    expect_match(parse_year(datlist), "2009", all = FALSE)
    expect_match(parse_year("鮮魚測定11"), "2011")
    expect_match(parse_year("鮮魚測定99"), "2099")
    expect_match(parse_year("aaaa99"), "2099")
    expect_match(parse_year("____99"), "2099")
    expect_match(parse_year("123499"), "2099")
  })

  test_that("get_filelist() puts species file list correctly", {
    expect_match(get_filelist(indir, "カタクチイワシ"), "カタクチイワシ.xls", all = FALSE)
    expect_match(get_filelist(indir, "マイワシ"), "マイワシ.xls", all = FALSE)
    expect_error(get_filelist(indir), "argument \"spcs\" is missing, with no default", fixed = TRUE)
    expect_error(get_filelist(indir, NA), "Give me Japanese species name", fixed = TRUE)
  })

  infile06 <- "/Users/ahayashi/Documents/GitHub/tidyNAS/data/鮮魚関係/鮮魚測定06/カタクチイワシ.xls"
  infile17 <- "/Users/ahayashi/Documents/GitHub/tidyNAS/data/鮮魚関係/鮮魚測定17/カタクチイワシ.xls"

  test_that("get_sheet2read() puts sheets to read", {
    expect_match(get_sheet2read(infile06), "0125", all = FALSE)
    expect_match(get_sheet2read(infile06), "0207", all = FALSE)
    expect_equal(length(get_sheet2read(infile06)), 10)
    expect_equal(length(get_sheet2read(infile17)), 0)
  })

  test_that("get_date() parses dates correctly", {
    expect_equal(get_date(2012, "0201"), as.Date("2012-02-01"))
    expect_equal(get_date(2012, "0201(1)"), as.Date("2012-02-01"))
    expect_equal(get_date(2017, "170201(1)"), as.Date("2017-02-01"))
    expect_equal(get_date(2017, "170201(11)"), as.Date("2017-02-01"))
  })

#+END_SRC

** データ整形関数
#+BEGIN_SRC R :tangle reformr/tests/testthat/test_format.R
  library(tidyverse)
  context("Formatting loaded data")
  param <- list()
  indir <- "/Users/ahayashi/Documents/GitHub/tidyNAS/data/鮮魚関係/"
  type  <- "sengyo"
  spcs  <- "カタクチイワシ"
  # get_filelist(param)
  col_names <- c("sample.no", "bl_mm", "bw_g", "sex", "gw_g", "gsi", "otolith.taken", "original.fname", "original.sheetname")
  # get_sheet2read(infile)
  test_that("format() make datcols correctly", {
    expect_equal(length(colnames(format(paste0(indir, "鮮魚測定06/カタクチイワシ.xls"), "0125"))), length(col_names))
    expect_equal(length(colnames(format(paste0(indir, "鮮魚測定06/カタクチイワシ.xls"), "0325"))), length(col_names))
    expect_equal(length(colnames(format(paste0(indir, "鮮魚測定08/マイワシ.xls"), "0116"))), length(col_names))
    expect_equal(length(colnames(format(paste0(indir, "鮮魚測定08/マイワシ.xls"), "0117"))), length(col_names))
    expect_equal(colnames(format(paste0(indir, "鮮魚測定06/カタクチイワシ.xls"), "0125")), col_names, ignore.case = FALSE)
    expect_equal(colnames(format(paste0(indir, "鮮魚測定08/マイワシ.xls"), "0116")), col_names, ignore.case = FALSE)
    expect_equal(colnames(format(paste0(indir, "鮮魚測定08/マイワシ.xls"), "0117")), col_names, ignore.case = FALSE)
  })

  test_that("format() cleanses length and weight columns correctly", {
    expect_match(typeof(format(paste0(indir, "鮮魚測定06/カタクチイワシ.xls"), "0125")$sample.no), "integer")
    expect_match(typeof(format(paste0(indir, "鮮魚測定06/カタクチイワシ.xls"), "0125")$bl_mm), "double")
    expect_match(typeof(format(paste0(indir, "鮮魚測定06/カタクチイワシ.xls"), "0125")$bw_g), "double")
    expect_match(typeof(format(paste0(indir, "鮮魚測定06/カタクチイワシ.xls"), "0125")$sex), "integer")
    expect_match(typeof(format(paste0(indir, "鮮魚測定06/カタクチイワシ.xls"), "0125")$gw_g), "double")
    expect_match(typeof(format(paste0(indir, "鮮魚測定06/カタクチイワシ.xls"), "0125")$gsi), "double")
    expect_match(typeof(format(paste0(indir, "鮮魚測定06/カタクチイワシ.xls"), "0325")$sample.no), "integer")
    expect_match(typeof(format(paste0(indir, "鮮魚測定06/カタクチイワシ.xls"), "0325")$bl_mm), "double")
    expect_match(typeof(format(paste0(indir, "鮮魚測定06/カタクチイワシ.xls"), "0325")$bw_g), "double")
    expect_match(typeof(format(paste0(indir, "鮮魚測定06/カタクチイワシ.xls"), "0325")$sex), "integer")
    expect_match(typeof(format(paste0(indir, "鮮魚測定06/カタクチイワシ.xls"), "0325")$gw_g), "double")
    expect_match(typeof(format(paste0(indir, "鮮魚測定06/カタクチイワシ.xls"), "0325")$gsi), "double")
  })
  test_that("format() cleanses otolith and scale columns correctly", {
    expect_match(typeof(format(paste0(indir, "鮮魚測定06/カタクチイワシ.xls"), "0125")$otolith.taken), "integer")
  })
#+END_SRC
* 関数群を開発する
** reform(indir, type)
#+BEGIN_SRC R :tangle reformr/R/reform.R
  # This script is tangled from reformr.org.
  # Do not edit by hand!!!
  make_params <- function(indir, type, spcs){
    spcs_list <- c("カタクチイワシ", "マイワシ", "マアジ")
    param <- list()
    if (type %in% c("sengyo", "cruise") == TRUE) {
      param$type = type
    } else {
      stop("Tell me the correct type of data. Is it 'sengyo', or 'cruise?'")
    }
    if (spcs %in% spcs_list) {
      param$spcs <- spcs
    } else {
      stop("Tell me the correct Japanese species name.")
    }
    param$indir <- indir
    param
  }
  make_datlist <- function(indir, type){
    if (type == "sengyo") {
      datlist <- list.files(indir, pattern = "鮮魚")
    }
    datlist
  }

  parse_year <- function(datlist){
    yearlist <- datlist %>%
      str_sub(5, 6) %>%
      paste0(20, .)
    yearlist
  }

  get_filelist <- function(indir, spcs) {
    if (is.na(spcs)) {
      stop("Give me Japanese species name")
    } else {
      regexp   <- paste0(spcs, ".+")
    }
    filelist <- list.files(indir, pattern = regexp, recursive = TRUE, full.names = TRUE)
    filelist
  }

  get_sheet2read <- function(infile) {
    all_sheets <- readxl::excel_sheets(infile)
    sheets2read <- as.vector(na.omit(stringr::str_match(all_sheets, "^(?!.*0000)(?!体長)(?!Sheet).+")))
    sheets2read
  }
  get_date <- function(year, sheetname) {
    date_char <- dplyr::if_else(str_length(sheetname) >= 9,
                         paste0(20, str_sub(sheetname, 1, 6)),
                         paste0(year, str_sub(sheetname, 1, 4)))
    date      <- lubridate::ymd(date_char)
    date
  }

  format <- function(infile, sheet) {
    data_org <- readxl::read_xls(infile, sheet = sheet)
    col_names <- colnames(data_org)
    if (col_names[1] == "番号") data_org <- rename(data_org, No = "番号")
    if (any(regexpr("耳石", col_names) >0 ) == FALSE) data_org <- mutate(data_org, 耳石 = 0)
    data <- data_org %>%
      transmute(sample.no = parse_integer(No),
                bl_mm = parse_double(BL),
                bw_g = parse_double(BW),
                sex = parse_integer(Sex),
                gw_g = parse_double(GW),
                gsi = gw_g / bw_g * 100,
                otolith.taken = 耳石 %>%
                  str_replace("y", "1") %>%
                  parse_integer()) %>%
      mutate(original.fname = infile,
             original.sheetname = sheet)
    data
  }
#+END_SRC

#+RESULTS:

*** コードを書く
*** get_station()
*** format(param)
*** merge_old(param)
** conv2entsheet()
*** load_tidied(data)
*** conv2inputSheet(tidied)
** export_inputSheet()
*** load_inputSheet(entsheet)
*** split_year(inputSheet)
*** export_entsheet(entsheet, outdir)
* 再ロードしてテストする
#+BEGIN_SRC R :results table
  devtools::load_all("reformr")
  devtools::test("reformr")
#+END_SRC

#+RESULTS:
| test_filestring.R | Parse file and sheet names | make_datlist make data list correctly                            | 0 | 0 | FALSE | TRUE  | 0 | 0.000999999999999446 | 0 | 0.00100000000020373 |
| test_format.R     | Formatting loaded data     | format() cleanses data                                           | 1 | 0 | TRUE  | FALSE | 0 |                    0 | 0 | 0.00100000000020373 |
| test_param.R      | Handle param object        | make_params accept only 'sengyo' or 'cruise'                     | 2 | 0 | FALSE | FALSE | 0 |  0.00200000000000067 | 0 | 0.00199999999676947 |
| test_param.R      | Handle param object        | make_params accept only 'カタクチイワシ', 'マイワシ' or 'マアジ' | 2 | 0 | FALSE | FALSE | 0 |  0.00199999999999889 | 0 | 0.00200000000040745 |

* データ整備状況
** マアジ高精度化
*** DONE 測定台帳 [100%]
[[/Users/ahayashi/Documents/GitHub/jm/tidy_data.org][データ整理プロジェクト]]
**** DONE 島根稚魚
**** DONE 鳥取稚魚
**** DONE 陽光丸稚魚
:LOGBOOK:
CLOCK: [2018-12-28 Fri 11:05]--[2018-12-28 Fri 15:44] =>  4:39
CLOCK: [2018-12-14 Fri 15:14]--[2018-12-14 Fri 16:57] =>  1:43
- 2011から2013まで完了
:END:

*** TODO 調査結果 [66%]

***** DONE 島根                                                :要関数化:
****** 関数定義
dfを読み込むのではなく，ファイル名を読み込むように変更するべき．
:PROPERTIES:
:ORDERED:  t
:END:
#+BEGIN_SRC R
  format_trawl_shimane <- function(df) {
      df %>%
        transmute(date.collected = ymd(`月日`),
                  cruise.number = `回次`,
               station = Stn.,
               lat.trawl.start_org = 曳網開始位置,
               lon.trawl.start_org = 曳網開始位置__1,
               tow.duration_min = 曳網時間,
               tow.speed_kt = 曳網速度,
               tow.depth_m = `曳網水深（最大）`,
               n.Trachurus.japonicus = マアジ,
               t0   = `0m`,
               t10  = `10m`,
               t20  = `20m`,
               t30  = `30m`,
               t50  = `50m`,
               t75  = `75m`,
               t100 = `100m`,
               t150 = `150m`,
               t200 = `200m`,
               t300 = `300m`,
               s0   = `0m (1m)`,
               s10  = `10m__1`,
               s20  = `20m__1`,
               s30  = `30m__1`,
               s50  = `50m__1`,
               s75  = `75m__1`,
               s100 = `100m__1`,
               s150 = `150m__1`,
               s200 = `200m__1`,
               s300 = `300m__1`) %>%
        mutate(year = year(date.collected),
               month = month(date.collected) %>%
                 formatC(width=2, flag="0"),
               day = day(date.collected),
               pseudo.month = ifelse(cruise.number == 1, "05",
                                      ifelse(cruise.number == 2, "06", "07")),
               cruise.name = paste0("Shimane", substr(year, 3, 4), pseudo.month, "JM"),
               id1 = paste(cruise.name, station, sep="_"),
               lat.trawl.start_deg = str_sub(lat.trawl.start_org, 1, 2) %>%
                 parse_number(),
               lat.trawl.start_min = str_sub(lat.trawl.start_org, 3, -1) %>%
                 parse_number(),
               lat.trawl.start_decimal = lat.trawl.start_deg + lat.trawl.start_min/60,
               lon.trawl.start_deg = str_sub(lon.trawl.start_org, 1, 3) %>%
                 parse_number(),
               lon.trawl.start_min = str_sub(lon.trawl.start_org, 4, -1) %>%
                 parse_number(),
               lon.trawl.start_decimal = lon.trawl.start_deg + lon.trawl.start_min/60
               ) %>%
        select(-lat.trawl.start_org, -lon.trawl.start_org)
    }
#+END_SRC

:LOGBOOK:
CLOCK: [2019-01-08 Tue 11:51]--[2019-01-08 Tue 12:25] =>  0:34
:END:
****** 各年のデータを整形
いずれは島根の元データを直接処理する関数が必要
******* 2011, 2013, 2015年を関数で整形
ただし読み込み元のシート'forR'も手作業を介している．要改善．
#+BEGIN_SRC R :results silent
  trawl_shimane2011 <- read_xlsx(paste0(datdir_jm_org, "/2011島根県マアジ加入量調査データ.xlsx"),
                                sheet="forR",
                                col_types = c("text", "numeric", "date", rep("text", 15), rep("numeric", 31))) %>%
    format_trawl_shimane()
  trawl_shimane2013 <- read_xlsx(paste0(datdir_jm_org, "島根県_マアジ加入量_2013.xlsx"),
                                sheet="forR", range = "A1:AV44",
                                col_types = c("text", "numeric", "date", rep("text", 15), rep("numeric", 30))) %>%
    format_trawl_shimane()
  trawl_shimane2015 <- read_xlsx(paste0(datdir_jm_org, "島根県_マアジ加入量_2015ver3.xlsx"),
                                sheet="forR", range = "A1:AS44",
                                col_types = c("text", "date", "numeric", rep("text", 11), rep("numeric", 31))) %>%
    format_trawl_shimane()
#+END_SRC

******* 2012年を力技で整形
:LOGBOOK:
CLOCK: [2019-01-08 Tue 13:05]--[2019-01-08 Tue 14:11] =>  1:06
:END:
#+BEGIN_SRC R :results silent
  year                    <- 2012
  border_may_jun          <- as.Date(paste(year, "-05-25", sep=""))
  border_jun_jul          <- as.Date(paste(year, "-06-25", sep=""))

  trawl_shimane2012_org <- read_xlsx(paste0(datdir_jm_org, "2012島根県マアジ加入量調査データ.xlsx"), sheet="for me", skip=1,
                            col_types = c("text", "numeric", "date", "text",
                                          rep("numeric", 4), "date", rep("numeric", 6)))
  trawl_shimane2012 <- trawl_shimane2012_org %>%
    rename(prefec = X__1,
           no = X__2,
           date.collected = X__3,
           station = X__4,
           lat.obs = 北緯,
           lon.obs = 東経,
           lat.trawl.start_degmin = 北緯__1,
           lon.trawl.start_degmin = 東経__1,
           time.trawl.start = X__5,
           t0  = `0m`,
           t10 = `10m`,
           t20 = `20m`,
           t30 = `30m`,
           t50 = `50m`,
           n.Trachurus.japonicus = マアジ) %>%
    mutate(date.collected = ymd(date.collected),
           year = year(date.collected),
           month = month(date.collected) %>%
                     formatC(width = 2, flag = 0),
           day = day(date.collected),
           lat.trawl.start_degmin = parse_number(lat.trawl.start_degmin),
           lon.trawl.start_degmin = parse_number(lon.trawl.start_degmin),
           lat.trawl.start_deg = floor(lat.trawl.start_degmin),
           lat.trawl.start_min = (lat.trawl.start_degmin-lat.trawl.start_deg)*100,
           lon.trawl.start_deg = floor(lon.trawl.start_degmin),
           lon.trawl.start_min = (lon.trawl.start_degmin-lon.trawl.start_deg)*100,
           tow.speed_kt = 3.0,
           tow.duration_min = 30,
           cruise.name = paste0("Shimane", substr(year,3,4), ifelse(date.collected < border_may_jun, "05JM",
                                   ifelse(date.collected > border_jun_jul, "07JM",
                                           "06JM"))))
#+END_SRC

******* 2014年を力技で整形
#+BEGIN_SRC R :results silent
  year                    <- 2014
  border_may_jun          <- as.Date(paste(year, "-05-25", sep=""))
  border_jun_jul          <- as.Date(paste(year, "-06-25", sep=""))
  trawl_shimane2014_org <- read_xlsx(paste0(datdir_jm_org, "Shimane_sampling_2014_MayJun.xlsx"), sheet=4)
  trawl_shimane2014 <- trawl_shimane2014_org %>%
    rename(date.collected = date,
           station = `stn#`,
           lat.trawl.start_deg = Lat,
           lat.trawl.start_min = `Lat-min`,
           lon.trawl.start_deg = Lon,
           lon.trawl.start_min = `Lon-min`,
           tow.duration_min = `towing time`,
           tow.speed_kt = `Towing speed (knot)`,
           tow.distance_km = `曳網距離（km）`,
           tow.depth_m = `towing depth`,
           t20 = T20,
           t50 = T50,
           mouth.opening_m2 = `開口面積(m2)`,
           n.Trachurus.japonicus = `マアジ（固体/haul）`) %>%
    mutate(date.collected = ymd(date.collected),
           year = year(date.collected),
           month = month(date.collected) %>%
                     formatC(width = 2, flag = 0),
           day = day(date.collected),
           cruise.name = paste0("Shimane", substr(year,3,4), ifelse(date.collected < border_may_jun, "05JM",
                                   ifelse(date.collected > border_jun_jul, "07JM",
                                           "06JM"))))

#+END_SRC


****** 島根データを統合
#+BEGIN_SRC R :results output
  trawl_shimane <- bind_rows(trawl_shimane2011,
                             trawl_shimane2012,
                             trawl_shimane2013,
                             trawl_shimane2014,
                             trawl_shimane2015) %>%
    mutate(date.collected = as.Date(date.collected),
           year = year(date.collected),
           month = month(date.collected) %>%
             formatC(width=2, flag="0"),
           day = day(date.collected),
           mouth.opening_m2 = 100,
           lat.trawl.start_decimal = lat.trawl.start_deg + lat.trawl.start_min/60,
           lon.trawl.start_decimal = lon.trawl.start_deg + lon.trawl.start_min/60,
           id1 = paste(cruise.name, station, sep="_"),
           tow.distance_km = tow.speed_kt * 1.85 * tow.duration_min / 60,
           water.vol.trawled_m3 = tow.distance_km * mouth.opening_m2 * 1000,
           d.Trachurus.japonicus_inds.per.m3 = n.Trachurus.japonicus / water.vol.trawled_m3) %>%
    arrange(date.collected)
#+END_SRC

#+RESULTS:

#+BEGIN_SRC R
  trawl_shimane %>%
    ggplot(aes(d.Trachurus.japonicus_inds.per.m3)) +
    geom_histogram() +
    facet_grid(year ~ .)

  # ggplot(shimane, aes(x = lon.trawl.start_decimal, y=lat.trawl.start_decimal, size=log10(d.Trachurus.japonicus_inds.per.m3+1))) +
  #   geom_point() +
  #   facet_wrap(~ year)

  # write.csv(shimane, "./output/dist_shimane.csv", row.names=FALSE)
  # unique(shimane$id1)
#+END_SRC

#+RESULTS:

***** FUTURE 鳥取
***** DONE 陽光丸
大下さんが既にやってくれている
*** 不足データを追加し，データを統合する
** NAS
