#+TITLE: gyokaikyor プロジェクトノート
#+PROPERTY: header-args :exports code :results scalar :session *R:tidyNAS*
#+STARTUP: contents

* 目次                                                                :TOC_3:
- [[#これは何か][これは何か？]]
- [[#レガシーファイル構成を整理する][レガシーファイル構成を整理する]]
  - [[#カタクチyyxlsx][★カタクチYY.xlsx]]
    - [[#ファイルがやっていること][ファイルがやっていること]]
    - [[#問題点][問題点]]
    - [[#解決策][解決策]]
  - [[#各県いわし][各県いわし]]
- [[#ディレクトリの構成][ディレクトリの構成]]
- [[#パッケージの機能][パッケージの機能]]
  - [[#データ目録の生成][データ目録の生成]]
  - [[#データの統合][データの統合]]
  - [[#グラフ描画][グラフ描画]]
  - [[#予報文案テンプレートの生成][予報文案テンプレートの生成]]
- [[#デモ][デモ]]
- [[#開発環境の整備][開発環境の整備]]
  - [[#ディレクトリ作成][ディレクトリ作成]]
  - [[#セットアップ][セットアップ]]
  - [[#本バッケージ内部で使用するパッケージ][本バッケージ内部で使用するパッケージ]]
- [[#開発][開発]]
  - [[#リロード--自動テスト][リロード & 自動テスト]]
  - [[#各県ファイルの処理概要][各県ファイルの処理概要]]
    - [[#体長][体長]]
    - [[#漁獲量][漁獲量]]
  - [[#テストコード][テストコード]]
  - [[#関数][関数]]

* これは何か？
漁海況業務のリポジトリ．
主にRのパッケージ開発のコミュニケーション用．

* レガシーファイル構成を整理する
** ★カタクチYY.xlsx
*** ファイルがやっていること
各県の月別体長組成を統合し，
- 東シナ海
- 日本海
- 計
というシートで統合する Excel ファイル．
*** 問題点
- バイナリなのでバージョン管理ができない
- 資源評価と漁海況の両方で使用されるが，両業務で集計方法が異なるので紛らわしい．
*** 解決策
- 各県の提出データを読み込み，県ごとに csv 形式のデータベースを作成する．
- データベースから範囲を指定して体長階級×月形式のテーブルを作成する
使用イメージ
#+BEGIN_SRC R :exports code :results silent
fmt_bl("./data.git/漁海況/2018年10月/各県資料/長崎県/", gyokaikyo = TRUE, plot = TRUE)
get_table("./output.git/nagasaki_2018oct.csv", gyokaikyo = TRUE, start = 2016, end = 2017)
#+END_SRC
**** なぜデータベースか？
過去のデータが報告なしに更新されていた場合に対処するため
**** なぜ県ごとか？
差分管理を確実に実施するため
** 各県いわし
* ディレクトリの構成
通常の R パッケージのディレクトリは全て GitHub で公開する．
ただし，以下のディレクトリは GitHub にはアップロードせず，ローカルで管理する（リモートリポジトリを GitHub ではなく，NAS にする）．
- data.git/: 各県から提供されたデータ．
- docs.git/: 予報文案など．
  
* パッケージの機能
** データ目録の生成
** データの統合
** グラフ描画
- 漁獲量
- 体長組成
** 予報文案テンプレートの生成
何らかの構造化マークアップ言語の形式で．
できるだけタグが短いもの．
マークダウンが有力か？
* デモ
* 開発環境の整備
** ディレクトリ作成
#+BEGIN_SRC R :results silent
# usethis::create_package("gyokaikyor")
#+END_SRC
** セットアップ
#+BEGIN_SRC R
setwd("gyokaikyor")
#+END_SRC

#+RESULTS:

** 本バッケージ内部で使用するパッケージ
#+BEGIN_SRC R :results silent
  usethis::use_package("magrittr", "Imports")
  # usethis::use_package("ggplot2", "Imports")
  # usethis::use_package("tibble", "Imports")
  usethis::use_testthat()
#+END_SRC

#+BEGIN_SRC sh :exports results :session nil
cat gyokaikyor/DESCRIPTION
#+END_SRC

#+RESULTS[26e6d91ffe9c3ff5d95f888fb0006e9154a02abb]:
#+begin_example
Package: gyokaikyor
Title: What the Package Does (One Line, Title Case)
Version: 0.0.0.9000
Authors@R: 
    person(given = "First",
           family = "Last",
           role = c("aut", "cre"),
           email = "first.last@example.com")
Description: What the package does (one paragraph).
License: What license it uses
Encoding: UTF-8
LazyData: true
Imports: 
    magrittr
Suggests: 
    testthat
#+end_example

* 開発
** リロード & 自動テスト
#+BEGIN_SRC R :results output
  setwd("gyokaikyor")
  devtools::load_all()
  system("R CMD INSTALL --preclean --no-multiarch --with-keep.source .")
  devtools::test()
  devtools::document(roclets=c('rd', 'collate', 'namespace'))
#+END_SRC
** 各県ファイルの処理概要
*** 体長
**** 熊本
列方向に続いた精密測定データ．
- 「カタクチ」シートを読み込み
- 日付が入った列（H29.4.30形式）を取得
- 漁法名を取得
- できればその他情報も取得（操業海域・陸揚げ港）
- 測定データ（全長・被鱗体長・体重）を取得
#+BEGIN_SRC R
# data[duplicated(paste(data$Date, data$No, sep = ",")), ]
source("./_packages.R")
source("./_constants.R")
library(lubridate)
prefecture          <- "kumamoto"
prefec_name         <- PREFEC_TABLE[[prefecture]]
species             <- c("Sardine", "Anchovy", "Round herring", "Mackerels")
spname_translate    <- hash(species, c("マイワシ", "カタクチイワシ", "ウルメイワシ", "サハ゛類")) #do not use character "サバ"
header_width        <- 7
rowpos_of_1stdata   <- 8
offset_tl           <- -1
colshift_bw         <- 3
colshift_sex        <- 4
colshift_gw         <- 5
colshift_date       <- 2
colpos_of_hist      <- 3
n_of_histclass      <- 45
dattype             <- c("体長", "精密")
out                 <- NULL
need_check          <- NULL
gyokaikyo_oct       <- gsub("3月", "10月", GYOKAIKYODIR)
bldatdir            <- paste(gyokaikyo_oct, "/各県資料/",PREFEC_TABLE[[prefecture]],"県", sep="")
infiles              <- list.files(bldatdir, recursive = TRUE, full.names = TRUE, pattern="^[^~$].+体長.+")
char2num <- function(df) {
  vec <- df %>% unlist() %>% parse_number()
  vec
}
char2date <- function(df) {
  num <- df %>% unlist() %>% parse_number()
  date <- as.Date(num - 2, origin="1900-01-01")
}
out <- NULL
for(f in infiles){
  if (gregexpr("xlsx", f) > 0) {
    data        <- read_xlsx(f, sheet="カタクチ", col_names = FALSE)
  } else {
    data        <- read_xls(f, sheet="カタクチ", col_names = FALSE)
  }
  datcols     <- NULL
  date.org  <- data[1,]
  cols2read <- which((!is.na(date.org) & (gregexpr(".+[0-9].+", date.org) > 0)) == TRUE)
  nacnt     <- 0
  df        <- matrix(NA, nrow=100*length(cols2read), ncol=7)
  cnt       <- 0
  for(j in cols2read){
    pos2replace <- 1:100 + 100 * cnt
    date <- char2date(date.org[j])
    if (is.na(date) == TRUE) {browser()}
    total.length_mm <- data[rowpos_of_1stdata:nrow(data), j+offset_tl] %>% char2num
    bl_mm           <- data[rowpos_of_1stdata:nrow(data), j] %>% char2num()
    sample_no       <- 1:length(bl_mm)
    bw_g            <- data[rowpos_of_1stdata:nrow(data), j + 1] %>% char2num()
    sex             <- data[rowpos_of_1stdata:nrow(data), j + 2] %>% char2num() # male: 1; female:2
    gw              <- data[rowpos_of_1stdata:nrow(data), j + 3] %>% char2num()
    year      <- year(date)
    month     <- month(date)
    day       <- day(date)
    fisheries_type  <- as.character(data[1, j+header_width-3])
    ifelse(gregexpr("[巻ま]き", fisheries_type)>0,
           fisheries_type <- "Makiami",
           ifelse(gregexpr("棒受け?", fisheries_type)>0,
           fisheries_type <- "Bouukeami",
           ""))
    df[pos2replace, 1] <- sample_no
    df[pos2replace, 2] <- as.character(date)
    df[pos2replace, 3] <- fisheries_type
    df[pos2replace, 4] <- bl_mm
    df[pos2replace, 5] <- bw_g
    df[pos2replace, 6] <- sex
    df[pos2replace, 7] <- gw
    cnt <- cnt + 1
  }
  out <- rbind(out, df)
}
out <- as.tibble(out)
colnames(out) <- c("sample.no", "date","fisheries.type","bl_mm","bw_g","sex","gw_g")
out <- out[!is.na(out$bl_mm),]

out2 <- out %>%
  mutate(sample.no = parse_number(sample.no),
         date = parse_date(date),
         year = year(date),
         month = month(date),
         day = day(date),
         bl_mm = parse_number(bl_mm),
         bw_g = parse_number(bw_g),
         sex = parse_integer(sex),
         gw_g = parse_number(gw_g))
tail(out2)

out2 %>%
  ggplot(aes(bl_mm, bw_g)) +
  geom_point()

formatted_data <- subset(out2, year==YEAR)
out_all  <- matrix(NA, nrow = length(CLASSNAME4Excel), ncol = 12)
out_maki <- matrix(NA, nrow = length(CLASSNAME4Excel), ncol = 12)
for(m in MONTHS){
  # m=6
  mdata   <- filter(formatted_data, month==m)
  if(nrow(mdata)>0){
      hist <- hist(mdata$bl_mm, breaks=BREAKS4Excel, right=F)$counts
  }else{
      hist <- rep(0, length(CLASSNAME4Excel))
  }
  out_all[,m]        <- hist

  mdata_maki <- filter(formatted_data, month==m & fisheries.type == "Makiami")
  if(nrow(mdata_maki) > 0){
      hist_maki <- hist(mdata_maki$bl_mm, breaks=BREAKS4Excel, right=FALSE)$counts
  }else{
      hist_maki<- rep(0, length(CLASSNAME4Excel))
  }
  out_maki[,m]        <- hist_maki
}

outfname    <- paste0("../", OUTDIR, "/体長組成_熊本.csv")
rownames(out_all) <- CLASSNAME4Excel
colnames(out_all) <- paste0(month.abb, YEAR)
out_all           <- out_all[rownames(out_all) %in% CLASSNAME4Excel, ]
write.csv(out_all, outfname)
outfname_maki      <- paste0("../", OUTDIR, "/体長組成_熊本_まき網のみ.csv")
rownames(out_maki) <- CLASSNAME4Excel
colnames(out_maki) <- paste0(month.abb, YEAR)
out_maki           <- out_maki[rownames(out_maki) %in% CLASSNAME4Excel, ]
write.csv(out_maki, outfname_maki)

print(out_all)

#+END_SRC
*** 漁獲量
** テストコード
:PROPERTIES:
:header-args: :results silent :exports code
:END:
*** テスト/ ファイル名操作
#+BEGIN_SRC R :tangle gyokaikyor/tests/testthat/test_handle_fname.R
  context("Handle file name")
  fname     <- "04 漁獲努力量（1704~1803）（熊本県）.xls"
  tbl_fname <- hash::hash(c("04 漁獲努力量（1704~1803）（熊本県）.xls"), "熊本")
  tbl_fmt   <- hash::hash(c("熊本"), c("seimitsu"))
  test_that("give_class() gives fname its file format as class", {
    expect_is(give_class(fname, tbl_fname, tbl_fmt), "seimitsu")
  })
#+END_SRC
** 関数
:PROPERTIES:
:header-args: :results silent :exports code
:END:
*** ファイル名操作
#+BEGIN_SRC R :tangle gyokaikyor/R/handle_fname.R
  give_class <- function(fname, tbl.fname, tbl.fmt) {
    out   <- fname
    prefec <- tbl.fname[[fname]]
    format <- tbl.fmt[[prefec]]
    class(out) <- format
    out
  }
#+END_SRC
